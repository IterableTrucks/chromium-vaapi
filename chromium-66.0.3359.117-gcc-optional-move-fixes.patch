diff -up chromium-66.0.3359.117/content/browser/appcache/appcache_request_handler.cc.gccomove chromium-66.0.3359.117/content/browser/appcache/appcache_request_handler.cc
--- chromium-66.0.3359.117/content/browser/appcache/appcache_request_handler.cc.gccomove	2018-04-23 12:53:32.419477463 -0400
+++ chromium-66.0.3359.117/content/browser/appcache/appcache_request_handler.cc	2018-04-23 12:54:02.497887258 -0400
@@ -639,7 +639,7 @@ AppCacheRequestHandler::MaybeCreateSubre
 
   SubresourceLoaderParams params;
   params.loader_factory_info = factory_ptr.PassInterface();
-  return params;
+  return base::Optional<SubresourceLoaderParams>(std::move(params));
 }
 
 void AppCacheRequestHandler::MaybeCreateSubresourceLoader(
diff -up chromium-66.0.3359.117/content/browser/service_worker/service_worker_controllee_request_handler.cc.gccomove chromium-66.0.3359.117/content/browser/service_worker/service_worker_controllee_request_handler.cc
--- chromium-66.0.3359.117/content/browser/service_worker/service_worker_controllee_request_handler.cc.gccomove	2018-04-23 12:54:16.614610083 -0400
+++ chromium-66.0.3359.117/content/browser/service_worker/service_worker_controllee_request_handler.cc	2018-04-23 12:54:38.401182827 -0400
@@ -271,7 +271,7 @@ ServiceWorkerControlleeRequestHandler::M
   controller_info->object_info = provider_host_->GetOrCreateServiceWorkerHandle(
       provider_host_->controller());
   params.controller_service_worker_info = std::move(controller_info);
-  return params;
+  return base::Optional<SubresourceLoaderParams>(std::move(params));
 }
 
 void ServiceWorkerControlleeRequestHandler::PrepareForMainResource(
diff -up chromium-66.0.3359.117/device/fido/device_response_converter.cc.gccomove chromium-66.0.3359.117/device/fido/device_response_converter.cc
--- chromium-66.0.3359.117/device/fido/device_response_converter.cc.gccomove	2018-04-23 12:54:51.452926482 -0400
+++ chromium-66.0.3359.117/device/fido/device_response_converter.cc	2018-04-23 12:55:24.248283058 -0400
@@ -121,7 +121,7 @@ base::Optional<AuthenticatorGetAssertion
     response.SetNumCredentials(it->second.GetUnsigned());
   }
 
-  return response;
+  return base::Optional<AuthenticatorGetAssertionResponse>(std::move(response));
 }
 
 base::Optional<AuthenticatorGetInfoResponse> ReadCTAPGetInfoResponse(
@@ -241,7 +241,7 @@ base::Optional<AuthenticatorGetInfoRespo
     response.SetPinProtocols(std::move(supported_pin_protocols));
   }
 
-  return response;
+  return base::Optional<AuthenticatorGetInfoResponse>(std::move(response));
 }
 
 }  // namespace device
